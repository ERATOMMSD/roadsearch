
BASE_FUNCTIONS = [('reverse test', lambda ks: ks[::-1]),
               ('split and swap test', lambda ks: ks[int(len(ks) / 2):] + ks[:int(len(ks) / 2)])]


class Exploiter:

    @staticmethod
    def get_all():
        # mutations that we may want to avoid in tests that passed because they are easily reversible
        return BASE_FUNCTIONS


class SingleVariableExploiter(Exploiter):
    @staticmethod
    def get_all():
        return BASE_FUNCTIONS + [('flip sign', lambda ks: list(map(lambda x: x * -1.0, ks)))]


class FirstVariableExploiter(Exploiter):
    @staticmethod
    def get_all():
        return BASE_FUNCTIONS + [('flip sign', lambda ks: list(map(lambda x: (x[0] * -1.0, x[1]), ks)))]

